name: Benchmarks
on: [push]

jobs:
  benchmark:
    name: Run the benchmark
    runs-on: ubuntu-latest
#    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create docker network
        run: docker network create data

      - name: Build Base
        run: docker build . -t benchmark-base
        shell: bash

      - name: Benchmark squall
        uses: ./.github/actions/benchmark
        with:
          framework: squall

      - name: Benchmark blacksheep
        uses: ./.github/actions/benchmark
        with:
          framework: blacksheep

      - name: Benchmark emmett
        uses: ./.github/actions/benchmark
        with:
          framework: emmett

      - name: Benchmark aiohttp
        uses: ./.github/actions/benchmark
        with:
          framework: aiohttp

      - name: Benchmark baize
        uses: ./.github/actions/benchmark
        with:
          framework: baize

      - name: Benchmark falcon
        uses: ./.github/actions/benchmark
        with:
          framework: falcon

      - name: Benchmark fastapi
        uses: ./.github/actions/benchmark
        with:
          framework: fastapi

      - name: Benchmark muffin
        uses: ./.github/actions/benchmark
        with:
          framework: muffin

      - name: Benchmark quart
        uses: ./.github/actions/benchmark
        with:
          framework: quart

      - name: Benchmark sanic
        uses: ./.github/actions/benchmark
        with:
          framework: sanic

      - name: Benchmark starlette
        uses: ./.github/actions/benchmark
        with:
          framework: starlette

      - name: Results
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: ./results

  readme:
    name: Update Results
    needs: benchmark
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
    - uses: actions/setup-python@v2
    - run: python -m pip install -r render/requirements.txt
    - run: python render/render.py
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Commit changes
      run: |
        git config --global user.name 'Github Actions'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -am "Update results"
        git tag ${{ steps.date.outputs.date }}
        git push -f --tags
        git push
