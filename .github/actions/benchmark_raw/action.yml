name: benchmark_raw

inputs:

  name:
    description: Name of the framework
    required: true

  network:
    description: Name of docker network
    default: data

runs:
  using: composite
  steps:

    - name: Build
      run: docker build -f ./frameworks/Dockerfile -t app ./frameworks/${{ inputs.name }}
      shell: bash

    - name: Run
      run: >
        docker run --rm --network ${{ inputs.network }} -d
        -v $GITHUB_WORKSPACE/dummy:/app/dummy
        -v $GITHUB_WORKSPACE/fixtures:/app/fixtures
        -v $GITHUB_WORKSPACE/frameworks/schema_dataclasses.py:/app/schema_dataclasses.py
        -v $GITHUB_WORKSPACE/frameworks/schema_pydantic.py:/app/schema_pydantic.py
        --name app app
      shell: bash

    - name: Run raw userinfo
      run: >
        docker run --network ${{ inputs.network }}
        -e FRAMEWORK=${{ inputs.name }}
        -e FILENAME=/results/userinfo-raw.csv
        -e FIXTURE=/fixtures/userinfo.json
        -v $GITHUB_WORKSPACE/results:/results
        -v $GITHUB_WORKSPACE/wrk:/scripts
        -v $GITHUB_WORKSPACE/fixtures:/fixtures
        czerasz/wrk-json wrk http://app:8080 -d15s -t4 -c64 -s /scripts/process.lua
      shell: bash

    - name: Run raw sprint
      run: >
        docker run --network ${{ inputs.network }}
        -e FRAMEWORK=${{ inputs.name }}
        -e FILENAME=/results/sprint-raw.csv
        -e FIXTURE=/fixtures/sprint.json
        -v $GITHUB_WORKSPACE/results:/results
        -v $GITHUB_WORKSPACE/wrk:/scripts
        -v $GITHUB_WORKSPACE/fixtures:/fixtures
        czerasz/wrk-json wrk http://app:8080 -d15s -t4 -c64 -s /scripts/process.lua
      shell: bash

    - name: Clean
      run: docker stop app
      shell: bash

